name: #PROJECT_NAME#
options:
  carthageExecutablePath: 'mint run carthage carthage'
targets:
  #PROJECT_NAME#:
    type: application
    platform: iOS
    deploymentTarget: 11.0
    sources: [#PROJECT_NAME#]
    settings:
      PRODUCT_BUNDLE_IDENTIFIER: com.#PROJECT_NAME#.ios
      SWIFT_VERSION: '5.0'
    dependencies:
      - carthage: Rswift
    preBuildScripts:
      - script: |
          if mint list | grep -q 'R.swift'; then
          mint run R.swift rswift generate "$SRCROOT/#PROJECT_NAME#/Resources/R_Swift/R.generated.swift"
          else
          echo "warning: R.swift not installed; run 'mint bootstrap' to install"
          fi
        name: R.Swift
        inputFiles:
          - $TEMP_DIR/rswift-lastrun
        outputFiles:
          - $SRCROOT/#PROJECT_NAME#/Resources/R_Swift/R.generated.swift
    postCompileScripts:
      - script: |
          if mint list | grep -q 'SwiftLint'; then
          mint run SwiftLint swiftlint autocorrect
          mint run SwiftLint swiftlint
          else
          echo "warning: SwiftLint not installed, download from https://github.com/realm/SwiftLint"
          fi
        name: Swiftlint
  #PROJECT_NAME#Tests:
    type: bundle.unit-test
    platform: iOS
    deploymentTarget: '10.0'
    sources: [#PROJECT_NAME#Tests]
    dependencies:
      - target: #PROJECT_NAME#
